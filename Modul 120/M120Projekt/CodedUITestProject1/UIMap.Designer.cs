// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by coded UI test builder.
//      Version: 16.0.0.0
//
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------

namespace CodedUITestProject1
{
    using System;
    using System.CodeDom.Compiler;
    using System.Collections.Generic;
    using System.Drawing;
    using System.Text.RegularExpressions;
    using System.Windows.Input;
    using Microsoft.VisualStudio.TestTools.UITest.Extension;
    using Microsoft.VisualStudio.TestTools.UITesting;
    using Microsoft.VisualStudio.TestTools.UITesting.WinControls;
    using Microsoft.VisualStudio.TestTools.UITesting.WpfControls;
    using Microsoft.VisualStudio.TestTools.UnitTesting;
    using Keyboard = Microsoft.VisualStudio.TestTools.UITesting.Keyboard;
    using Mouse = Microsoft.VisualStudio.TestTools.UITesting.Mouse;
    using MouseButtons = System.Windows.Forms.MouseButtons;
    
    
    [GeneratedCode("Coded UITest Builder", "16.0.28315.86")]
    public partial class UIMap
    {
        
        /// <summary>
        /// WrongArticleNum_Arrange_Act - Use 'WrongArticleNum_Arrange_ActParams' to pass parameters into this method.
        /// </summary>
        public void WrongArticleNum_Arrange_Act()
        {
            #region Variable Declarations
            WinEdit uINameEdit = this.UIDebugWindow.UIItemWindow.UIM120ProjektexeListItem.UINameEdit;
            WpfButton uIButtonCreateArticleButton = this.UIMainWindowWindow.UIItemCustom.UIButtonCreateArticleButton;
            WpfEdit uIArticleNumberEdit = this.UIMainWindowWindow.UIItemCustom1.UIArticleNumberEdit;
            WpfComboBox uIManufacturerComboBox = this.UIMainWindowWindow.UIItemCustom1.UIManufacturerComboBox;
            WpfEdit uIArticleNameEdit = this.UIMainWindowWindow.UIItemCustom1.UIArticleNameEdit;
            WpfEdit uIArticleDescriptionEdit = this.UIMainWindowWindow.UIItemCustom1.UIArticleDescriptionEdit;
            WpfEdit uIPriceEdit = this.UIMainWindowWindow.UIItemCustom1.UIPriceEdit;
            WpfCheckBox uIOnStockCheckBox = this.UIMainWindowWindow.UIItemCustom1.UIOnStockCheckBox;
            WpfDatePicker uILastArrivalDatePicker = this.UIMainWindowWindow.UIItemCustom1.UILastArrivalDatePicker;
            WpfButton uIBtnSaveButton = this.UIMainWindowWindow.UIItemCustom1.UIBtnSaveButton;
            #endregion

            // Double-Click 'Name' text box
            Mouse.DoubleClick(uINameEdit, new Point(98, 14));

            // Click 'ButtonCreateArticle' button
            Mouse.Click(uIButtonCreateArticleButton, new Point(27, 19));

            // Type '123' in 'ArticleNumber' text box
            uIArticleNumberEdit.Text = this.WrongArticleNum_Arrange_ActParams.UIArticleNumberEditText;

            // Select 'ACER' in 'Manufacturer' combo box
            uIManufacturerComboBox.SelectedItem = this.WrongArticleNum_Arrange_ActParams.UIManufacturerComboBoxSelectedItem;

            // Type 'Aspire' in 'ArticleName' text box
            uIArticleNameEdit.Text = this.WrongArticleNum_Arrange_ActParams.UIArticleNameEditText;

            // Type '3.6 GHZ CPU' in 'ArticleDescription' text box
            uIArticleDescriptionEdit.Text = this.WrongArticleNum_Arrange_ActParams.UIArticleDescriptionEditText;

            // Type 'Shift + {Home}' in 'ArticleDescription' text box
            Keyboard.SendKeys(uIArticleDescriptionEdit, this.WrongArticleNum_Arrange_ActParams.UIArticleDescriptionEditSendKeys, ModifierKeys.Shift);

            // Type '999' in 'Price' text box
            uIPriceEdit.Text = this.WrongArticleNum_Arrange_ActParams.UIPriceEditText;

            // Select 'OnStock' check box
            uIOnStockCheckBox.Checked = this.WrongArticleNum_Arrange_ActParams.UIOnStockCheckBoxChecked;

            // Select '09-Oct-2019' in 'LastArrival' date picker
            uILastArrivalDatePicker.DateAsString = this.WrongArticleNum_Arrange_ActParams.UILastArrivalDatePickerDateAsString;

            // Click 'BtnSave' button
            Mouse.Click(uIBtnSaveButton, new Point(124, 22));
        }
        
        /// <summary>
        /// WrongArticleNum Fehler
        /// </summary>
        public void WrongArticleNum_Assert()
        {
            #region Variable Declarations
            WpfText uIBittegebenSieeinegülText = this.UIMainWindowWindow.UIItemCustom1.UIBittegebenSieeinegülText;
            #endregion

            // Verify that the 'DisplayText' property of 'Bitte geben Sie eine gültige, 7 Stellige Artikelnu...' label equals 'Bitte geben Sie eine gültige, 7 Stellige Artikelnummer ein.'
            Assert.AreEqual(this.WrongArticleNum_AssertExpectedValues.UIBittegebenSieeinegülTextDisplayText, uIBittegebenSieeinegülText.DisplayText, "WrongArticleNum");
        }
        
        /// <summary>
        /// WrongArticleNum_Cleanup
        /// </summary>
        public void WrongArticleNum_Cleanup()
        {
            #region Variable Declarations
            WinButton uISchließenButton = this.UIMainWindowWindow1.UISchließenButton;
            #endregion

            // Click 'Schließen' button
            Mouse.Click(uISchließenButton, new Point(12, 13));
        }
        
        /// <summary>
        /// NoDate_Arrange_Act - Use 'NoDate_Arrange_ActParams' to pass parameters into this method.
        /// </summary>
        public void NoDate_Arrange_Act()
        {
            #region Variable Declarations
            WinEdit uINameEdit = this.UIDebugWindow.UIItemWindow.UIM120ProjektexeListItem.UINameEdit;
            WpfButton uIButtonCreateArticleButton = this.UIMainWindowWindow.UIItemCustom.UIButtonCreateArticleButton;
            WpfEdit uIArticleNumberEdit = this.UIMainWindowWindow.UIItemCustom1.UIArticleNumberEdit;
            WpfComboBox uIManufacturerComboBox = this.UIMainWindowWindow.UIItemCustom1.UIManufacturerComboBox;
            WpfEdit uIArticleNameEdit = this.UIMainWindowWindow.UIItemCustom1.UIArticleNameEdit;
            WpfEdit uIArticleDescriptionEdit = this.UIMainWindowWindow.UIItemCustom1.UIArticleDescriptionEdit;
            WpfEdit uIPriceEdit = this.UIMainWindowWindow.UIItemCustom1.UIPriceEdit;
            WpfCheckBox uIOnStockCheckBox = this.UIMainWindowWindow.UIItemCustom1.UIOnStockCheckBox;
            WpfButton uIBtnSaveButton = this.UIMainWindowWindow.UIItemCustom1.UIBtnSaveButton;
            #endregion

            // Double-Click 'Name' text box
            Mouse.DoubleClick(uINameEdit, new Point(53, 7));

            // Click 'ButtonCreateArticle' button
            Mouse.Click(uIButtonCreateArticleButton, new Point(20, 25));

            // Type '1234567' in 'ArticleNumber' text box
            uIArticleNumberEdit.Text = this.NoDate_Arrange_ActParams.UIArticleNumberEditText;

            // Select 'ACER' in 'Manufacturer' combo box
            uIManufacturerComboBox.SelectedItem = this.NoDate_Arrange_ActParams.UIManufacturerComboBoxSelectedItem;

            // Type 'Aspire' in 'ArticleName' text box
            uIArticleNameEdit.Text = this.NoDate_Arrange_ActParams.UIArticleNameEditText;

            // Type '{Tab}' in 'ArticleName' text box
            Keyboard.SendKeys(uIArticleNameEdit, this.NoDate_Arrange_ActParams.UIArticleNameEditSendKeys, ModifierKeys.None);

            // Type '3.6 GHZ CPU' in 'ArticleDescription' text box
            uIArticleDescriptionEdit.Text = this.NoDate_Arrange_ActParams.UIArticleDescriptionEditText;

            // Type '{Tab}' in 'ArticleDescription' text box
            Keyboard.SendKeys(uIArticleDescriptionEdit, this.NoDate_Arrange_ActParams.UIArticleDescriptionEditSendKeys, ModifierKeys.None);

            // Type '999' in 'Price' text box
            uIPriceEdit.Text = this.NoDate_Arrange_ActParams.UIPriceEditText;

            // Type '{Tab}' in 'Price' text box
            Keyboard.SendKeys(uIPriceEdit, this.NoDate_Arrange_ActParams.UIPriceEditSendKeys, ModifierKeys.None);

            // Select 'OnStock' check box
            uIOnStockCheckBox.Checked = this.NoDate_Arrange_ActParams.UIOnStockCheckBoxChecked;

            // Click 'BtnSave' button
            Mouse.Click(uIBtnSaveButton, new Point(164, 23));
        }
        
        /// <summary>
        /// NoDate_Assert - Use 'NoDate_AssertExpectedValues' to pass parameters into this method.
        /// </summary>
        public void NoDate_Assert()
        {
            #region Variable Declarations
            WpfText uIBittegebenSieeinDatuText = this.UIMainWindowWindow.UIItemCustom1.UIBittegebenSieeinDatuText;
            #endregion

            // Verify that the 'DisplayText' property of 'Bitte geben Sie ein Datum an.' label equals 'Bitte geben Sie ein Datum an.'
            Assert.AreEqual(this.NoDate_AssertExpectedValues.UIBittegebenSieeinDatuTextDisplayText, uIBittegebenSieeinDatuText.DisplayText, "NoDate Fehler");
        }
        
        /// <summary>
        /// NoDate_Cleanup
        /// </summary>
        public void NoDate_Cleanup()
        {
            #region Variable Declarations
            WinButton uISchließenButton = this.UIMainWindowWindow1.UISchließenButton;
            #endregion

            // Click 'Schließen' button
            Mouse.Click(uISchließenButton, new Point(15, 10));
        }
        
        /// <summary>
        /// ValidInput_Arrange_Act - Use 'ValidInput_Arrange_ActParams' to pass parameters into this method.
        /// </summary>
        public void ValidInput_Arrange_Act()
        {
            #region Variable Declarations
            WinEdit uINameEdit = this.UIDebugWindow.UIItemWindow.UIM120ProjektexeListItem.UINameEdit;
            WpfButton uIButtonCreateArticleButton = this.UIMainWindowWindow.UIItemCustom.UIButtonCreateArticleButton;
            WpfText uIArtikelnummerText = this.UIMainWindowWindow.UIItemCustom1.UIArticleNumberEdit.UIArtikelnummerText;
            WpfEdit uIArticleNumberEdit = this.UIMainWindowWindow.UIItemCustom1.UIArticleNumberEdit;
            WpfComboBox uIManufacturerComboBox = this.UIMainWindowWindow.UIItemCustom1.UIManufacturerComboBox;
            WpfEdit uIArticleNameEdit = this.UIMainWindowWindow.UIItemCustom1.UIArticleNameEdit;
            WpfText uIPreisText = this.UIMainWindowWindow.UIItemCustom1.UIPriceEdit.UIPreisText;
            WpfEdit uIPriceEdit = this.UIMainWindowWindow.UIItemCustom1.UIPriceEdit;
            WpfCheckBox uIOnStockCheckBox = this.UIMainWindowWindow.UIItemCustom1.UIOnStockCheckBox;
            WpfDatePicker uILastArrivalDatePicker = this.UIMainWindowWindow.UIItemCustom1.UILastArrivalDatePicker;
            WpfButton uIBtnSaveButton = this.UIMainWindowWindow.UIItemCustom1.UIBtnSaveButton;
            #endregion

            // Double-Click 'Name' text box
            Mouse.DoubleClick(uINameEdit, new Point(69, 15));

            // Click 'ButtonCreateArticle' button
            Mouse.Click(uIButtonCreateArticleButton, new Point(11, 22));

            // Click 'Artikelnummer' label
            Mouse.Click(uIArtikelnummerText, new Point(91, 6));

            // Type '1234567' in 'ArticleNumber' text box
            uIArticleNumberEdit.Text = this.ValidInput_Arrange_ActParams.UIArticleNumberEditText;

            // Select 'ACER' in 'Manufacturer' combo box
            uIManufacturerComboBox.SelectedItem = this.ValidInput_Arrange_ActParams.UIManufacturerComboBoxSelectedItem;

            // Type 'Aspire' in 'ArticleName' text box
            uIArticleNameEdit.Text = this.ValidInput_Arrange_ActParams.UIArticleNameEditText;

            // Click 'Preis' label
            Mouse.Click(uIPreisText, new Point(13, 11));

            // Type '999' in 'Price' text box
            uIPriceEdit.Text = this.ValidInput_Arrange_ActParams.UIPriceEditText;

            // Select 'OnStock' check box
            uIOnStockCheckBox.Checked = this.ValidInput_Arrange_ActParams.UIOnStockCheckBoxChecked;

            // Select '09-Oct-2019' in 'LastArrival' date picker
            uILastArrivalDatePicker.DateAsString = this.ValidInput_Arrange_ActParams.UILastArrivalDatePickerDateAsString;

            // Click 'BtnSave' button
            Mouse.Click(uIBtnSaveButton, new Point(132, 16));
        }
        
        /// <summary>
        /// ValidInput_Assert - Use 'ValidInput_AssertExpectedValues' to pass parameters into this method.
        /// </summary>
        public void ValidInput_Assert()
        {
            #region Variable Declarations
            WpfText uIItem1234567Text = this.UIMainWindowWindow.UIItemCustom.UISelectionListTable.UIItem1234567Row.UIItem1234567Cell.UIItem1234567Text;
            WpfText uIACERText = this.UIMainWindowWindow.UIItemCustom.UISelectionListTable.UIItem1234567Row.UIACERCell.UIACERText;
            WpfText uIAspireText = this.UIMainWindowWindow.UIItemCustom.UISelectionListTable.UIItem1234567Row.UIAspireCell.UIAspireText;
            WpfText uIItem99900Text = this.UIMainWindowWindow.UIItemCustom.UISelectionListTable.UIItem1234567Row.UIItem99900Cell.UIItem99900Text;
            WpfCheckBox uIItemCheckBox = this.UIMainWindowWindow.UIItemCustom.UISelectionListTable.UIItem1234567Row.UITrueCell.UIItemCheckBox;
            #endregion

            // Verify that the 'DisplayText' property of '1234567' label equals '1234567'
            Assert.AreEqual(this.ValidInput_AssertExpectedValues.UIItem1234567TextDisplayText, uIItem1234567Text.DisplayText);

            // Verify that the 'DisplayText' property of 'ACER' label equals 'ACER'
            Assert.AreEqual(this.ValidInput_AssertExpectedValues.UIACERTextDisplayText, uIACERText.DisplayText);

            // Verify that the 'Name' property of 'Aspire' label equals 'Aspire'
            Assert.AreEqual(this.ValidInput_AssertExpectedValues.UIAspireTextName, uIAspireText.Name);

            // Verify that the 'Name' property of '999.00' label equals '999.00'
            Assert.AreEqual(this.ValidInput_AssertExpectedValues.UIItem99900TextName, uIItem99900Text.Name);

            // Verify that the 'Checked' property of check box equals 'True'
            Assert.AreEqual(this.ValidInput_AssertExpectedValues.UIItemCheckBoxChecked, uIItemCheckBox.Checked);
        }
        
        /// <summary>
        /// ValidInput_Cleanup
        /// </summary>
        public void ValidInput_Cleanup()
        {
            #region Variable Declarations
            WinButton uISchließenButton = this.UIMainWindowWindow1.UISchließenButton;
            #endregion

            // Click 'Schließen' button
            Mouse.Click(uISchließenButton, new Point(20, 10));
        }
        
        /// <summary>
        /// ValidInput_Arrange_Act2 - Use 'ValidInput_Arrange_Act2Params' to pass parameters into this method.
        /// </summary>
        public void ValidInput_Arrange_Act2()
        {
            #region Variable Declarations
            WinEdit uINameEdit = this.UIDebugWindow.UIItemWindow.UIM120ProjektexeListItem.UINameEdit;
            WpfButton uIButtonCreateArticleButton = this.UIMainWindowWindow.UIItemCustom.UIButtonCreateArticleButton;
            WpfEdit uIArticleNumberEdit = this.UIMainWindowWindow.UIItemCustom1.UIArticleNumberEdit;
            WpfComboBox uIManufacturerComboBox = this.UIMainWindowWindow.UIItemCustom1.UIManufacturerComboBox;
            WpfEdit uIArticleNameEdit = this.UIMainWindowWindow.UIItemCustom1.UIArticleNameEdit;
            WpfCustom uIItemCustom1 = this.UIMainWindowWindow.UIItemCustom1;
            WpfText uIPreisText = this.UIMainWindowWindow.UIItemCustom1.UIPriceEdit.UIPreisText;
            WpfEdit uIPriceEdit = this.UIMainWindowWindow.UIItemCustom1.UIPriceEdit;
            WpfCheckBox uIOnStockCheckBox = this.UIMainWindowWindow.UIItemCustom1.UIOnStockCheckBox;
            WpfDatePicker uILastArrivalDatePicker = this.UIMainWindowWindow.UIItemCustom1.UILastArrivalDatePicker;
            WpfButton uIBtnSaveButton = this.UIMainWindowWindow.UIItemCustom1.UIBtnSaveButton;
            #endregion

            // Double-Click 'Name' text box
            Mouse.DoubleClick(uINameEdit, new Point(121, 5));

            // Click 'ButtonCreateArticle' button
            Mouse.Click(uIButtonCreateArticleButton, new Point(16, 16));

            // Type '1234567' in 'ArticleNumber' text box
            uIArticleNumberEdit.Text = this.ValidInput_Arrange_Act2Params.UIArticleNumberEditText;

            // Select 'ACER' in 'Manufacturer' combo box
            uIManufacturerComboBox.SelectedItem = this.ValidInput_Arrange_Act2Params.UIManufacturerComboBoxSelectedItem;

            // Type 'Aspire' in 'ArticleName' text box
            uIArticleNameEdit.Text = this.ValidInput_Arrange_Act2Params.UIArticleNameEditText;

            // Click custom control
            Mouse.Click(uIItemCustom1, new Point(784, 334));

            // Click 'Preis' label
            Mouse.Click(uIPreisText, new Point(21, 8));

            // Type '999' in 'Price' text box
            uIPriceEdit.Text = this.ValidInput_Arrange_Act2Params.UIPriceEditText;

            // Select 'OnStock' check box
            uIOnStockCheckBox.Checked = this.ValidInput_Arrange_Act2Params.UIOnStockCheckBoxChecked;

            // Select '09-Oct-2019' in 'LastArrival' date picker
            uILastArrivalDatePicker.DateAsString = this.ValidInput_Arrange_Act2Params.UILastArrivalDatePickerDateAsString;

            // Click 'BtnSave' button
            Mouse.Click(uIBtnSaveButton, new Point(105, 17));
        }
        
        /// <summary>
        /// ValidInput_Arrange_Act_1 - Use 'ValidInput_Arrange_Act_1Params' to pass parameters into this method.
        /// </summary>
        public void ValidInput_Arrange_Act_1()
        {
            #region Variable Declarations
            WinEdit uINameEdit = this.UIDebugWindow.UIItemWindow.UIM120ProjektexeListItem.UINameEdit;
            WpfButton uIButtonCreateArticleButton = this.UIMainWindowWindow.UIItemCustom.UIButtonCreateArticleButton;
            WpfEdit uIArticleNumberEdit = this.UIMainWindowWindow.UIItemCustom1.UIArticleNumberEdit;
            WpfComboBox uIManufacturerComboBox = this.UIMainWindowWindow.UIItemCustom1.UIManufacturerComboBox;
            WpfEdit uIArticleNameEdit = this.UIMainWindowWindow.UIItemCustom1.UIArticleNameEdit;
            WpfEdit uIArticleDescriptionEdit = this.UIMainWindowWindow.UIItemCustom1.UIArticleDescriptionEdit;
            WpfEdit uIPriceEdit = this.UIMainWindowWindow.UIItemCustom1.UIPriceEdit;
            WpfCheckBox uIOnStockCheckBox = this.UIMainWindowWindow.UIItemCustom1.UIOnStockCheckBox;
            WpfDatePicker uILastArrivalDatePicker = this.UIMainWindowWindow.UIItemCustom1.UILastArrivalDatePicker;
            WpfButton uIBtnSaveButton = this.UIMainWindowWindow.UIItemCustom1.UIBtnSaveButton;
            WpfCell uIAspireCell = this.UIMainWindowWindow.UIItemCustom2.UISelectionListTable.UIItem1234567Row.UIAspireCell;
            #endregion

            // Double-Click 'Name' text box
            Mouse.DoubleClick(uINameEdit, new Point(39, 12));

            // Click 'ButtonCreateArticle' button
            Mouse.Click(uIButtonCreateArticleButton, new Point(13, 25));

            // Type '1234567' in 'ArticleNumber' text box
            uIArticleNumberEdit.Text = this.ValidInput_Arrange_Act_1Params.UIArticleNumberEditText;

            // Select 'ACER' in 'Manufacturer' combo box
            uIManufacturerComboBox.SelectedItem = this.ValidInput_Arrange_Act_1Params.UIManufacturerComboBoxSelectedItem;

            // Type 'Aspire' in 'ArticleName' text box
            uIArticleNameEdit.Text = this.ValidInput_Arrange_Act_1Params.UIArticleNameEditText;

            // Type '{Tab}' in 'ArticleName' text box
            Keyboard.SendKeys(uIArticleNameEdit, this.ValidInput_Arrange_Act_1Params.UIArticleNameEditSendKeys, ModifierKeys.None);

            // Type '{Tab}' in 'ArticleDescription' text box
            Keyboard.SendKeys(uIArticleDescriptionEdit, this.ValidInput_Arrange_Act_1Params.UIArticleDescriptionEditSendKeys, ModifierKeys.None);

            // Type '999' in 'Price' text box
            uIPriceEdit.Text = this.ValidInput_Arrange_Act_1Params.UIPriceEditText;

            // Select 'OnStock' check box
            uIOnStockCheckBox.Checked = this.ValidInput_Arrange_Act_1Params.UIOnStockCheckBoxChecked;

            // Select '09-Oct-2019' in 'LastArrival' date picker
            uILastArrivalDatePicker.DateAsString = this.ValidInput_Arrange_Act_1Params.UILastArrivalDatePickerDateAsString;

            // Click 'BtnSave' button
            Mouse.Click(uIBtnSaveButton, new Point(147, 21));

            // Double-Click 'Aspire' cell
            Mouse.DoubleClick(uIAspireCell, new Point(189, 18));
        }
        
        /// <summary>
        /// ValidInput_Assert_1 - Use 'ValidInput_Assert_1ExpectedValues' to pass parameters into this method.
        /// </summary>
        public void ValidInput_Assert_1()
        {
            #region Variable Declarations
            WpfText uIItem1234567Text = this.UIMainWindowWindow.UIItemCustom3.UIItem1234567Text;
            WpfText uIACERText = this.UIMainWindowWindow.UIItemCustom3.UIACERText;
            WpfText uIAspireText = this.UIMainWindowWindow.UIItemCustom3.UIAspireText;
            WpfText uIItem99900Text = this.UIMainWindowWindow.UIItemCustom3.UIItem99900Text;
            WpfCheckBox uIIsOnStockCheckBox = this.UIMainWindowWindow.UIItemCustom3.UIIsOnStockCheckBox;
            WpfText uIItem09102019Text = this.UIMainWindowWindow.UIItemCustom3.UIItem09102019Text;
            #endregion

            // Verify that the 'DisplayText' property of '1234567' label equals '1234567'
            Assert.AreEqual(this.ValidInput_Assert_1ExpectedValues.UIItem1234567TextDisplayText, uIItem1234567Text.DisplayText);

            // Verify that the 'DisplayText' property of 'ACER' label equals 'ACER'
            Assert.AreEqual(this.ValidInput_Assert_1ExpectedValues.UIACERTextDisplayText, uIACERText.DisplayText);

            // Verify that the 'DisplayText' property of 'Aspire' label equals 'Aspire'
            Assert.AreEqual(this.ValidInput_Assert_1ExpectedValues.UIAspireTextDisplayText, uIAspireText.DisplayText);

            // Verify that the 'DisplayText' property of '999.00' label equals '999.00'
            Assert.AreEqual(this.ValidInput_Assert_1ExpectedValues.UIItem99900TextDisplayText, uIItem99900Text.DisplayText);

            // Verify that the 'Checked' property of 'IsOnStock' check box equals 'True'
            Assert.AreEqual(this.ValidInput_Assert_1ExpectedValues.UIIsOnStockCheckBoxChecked, uIIsOnStockCheckBox.Checked);

            // Verify that the 'DisplayText' property of '09.10.2019' label equals '09.10.2019'
            Assert.AreEqual(this.ValidInput_Assert_1ExpectedValues.UIItem09102019TextDisplayText, uIItem09102019Text.DisplayText);
        }
        
        /// <summary>
        /// ValidInput_Cleanup_1
        /// </summary>
        public void ValidInput_Cleanup_1()
        {
            #region Variable Declarations
            WinButton uISchließenButton = this.UIMainWindowWindow1.UISchließenButton;
            #endregion

            // Click 'Schließen' button
            Mouse.Click(uISchließenButton, new Point(12, 16));
        }
        
        /// <summary>
        /// ShouldBeValid_Arrange_Act - Use 'ShouldBeValid_Arrange_ActParams' to pass parameters into this method.
        /// </summary>
        public void ShouldBeValid_Arrange_Act()
        {
            #region Variable Declarations
            WinEdit uINameEdit = this.UIDebugWindow.UIItemWindow.UIM120ProjektexeListItem.UINameEdit;
            WpfButton uIButtonCreateArticleButton = this.UIMainWindowWindow.UIItemCustom.UIButtonCreateArticleButton;
            WpfEdit uIArticleNumberEdit = this.UIMainWindowWindow.UIItemCustom1.UIArticleNumberEdit;
            WpfComboBox uIManufacturerComboBox = this.UIMainWindowWindow.UIItemCustom1.UIManufacturerComboBox;
            WpfEdit uIArticleNameEdit = this.UIMainWindowWindow.UIItemCustom1.UIArticleNameEdit;
            WpfEdit uIArticleDescriptionEdit = this.UIMainWindowWindow.UIItemCustom1.UIArticleDescriptionEdit;
            WpfEdit uIPriceEdit = this.UIMainWindowWindow.UIItemCustom1.UIPriceEdit;
            WpfCheckBox uIOnStockCheckBox = this.UIMainWindowWindow.UIItemCustom1.UIOnStockCheckBox;
            WpfDatePicker uILastArrivalDatePicker = this.UIMainWindowWindow.UIItemCustom1.UILastArrivalDatePicker;
            WpfButton uIBtnSaveButton = this.UIMainWindowWindow.UIItemCustom1.UIBtnSaveButton;
            #endregion

            // Double-Click 'Name' text box
            Mouse.DoubleClick(uINameEdit, new Point(71, 11));

            // Click 'ButtonCreateArticle' button
            Mouse.Click(uIButtonCreateArticleButton, new Point(19, 31));

            // Type '1234567' in 'ArticleNumber' text box
            uIArticleNumberEdit.Text = this.ShouldBeValid_Arrange_ActParams.UIArticleNumberEditText;

            // Type '{Tab}' in 'ArticleNumber' text box
            Keyboard.SendKeys(uIArticleNumberEdit, this.ShouldBeValid_Arrange_ActParams.UIArticleNumberEditSendKeys, ModifierKeys.None);

            // Select 'ACER' in 'Manufacturer' combo box
            uIManufacturerComboBox.SelectedItem = this.ShouldBeValid_Arrange_ActParams.UIManufacturerComboBoxSelectedItem;

            // Type 'Aspire' in 'ArticleName' text box
            uIArticleNameEdit.Text = this.ShouldBeValid_Arrange_ActParams.UIArticleNameEditText;

            // Click 'ArticleDescription' text box
            Mouse.Click(uIArticleDescriptionEdit, new Point(279, 19));

            // Type '999' in 'Price' text box
            uIPriceEdit.Text = this.ShouldBeValid_Arrange_ActParams.UIPriceEditText;

            // Select 'OnStock' check box
            uIOnStockCheckBox.Checked = this.ShouldBeValid_Arrange_ActParams.UIOnStockCheckBoxChecked;

            // Select '09-Oct-2019' in 'LastArrival' date picker
            uILastArrivalDatePicker.DateAsString = this.ShouldBeValid_Arrange_ActParams.UILastArrivalDatePickerDateAsString;

            // Click 'BtnSave' button
            Mouse.Click(uIBtnSaveButton, new Point(97, 19));
        }
        
        /// <summary>
        /// ShouldBeValid_Assert - Use 'ShouldBeValid_AssertExpectedValues' to pass parameters into this method.
        /// </summary>
        public void ShouldBeValid_Assert()
        {
            #region Variable Declarations
            WpfTable uISelectionListTable = this.UIMainWindowWindow.UIItemCustom.UISelectionListTable;
            #endregion

            // Verify that the 'RowCount' property of 'SelectionList' table is not equal to '0'
            Assert.AreNotEqual(this.ShouldBeValid_AssertExpectedValues.UISelectionListTableRowCount, uISelectionListTable.RowCount);
        }
        
        /// <summary>
        /// ShouldBeValid_CleanUp
        /// </summary>
        public void ShouldBeValid_CleanUp()
        {
            #region Variable Declarations
            WinButton uISchließenButton = this.UIMainWindowWindow1.UISchließenButton;
            #endregion

            // Click 'Schließen' button
            Mouse.Click(uISchließenButton, new Point(23, 13));
        }
        
        #region Properties
        public virtual WrongArticleNum_Arrange_ActParams WrongArticleNum_Arrange_ActParams
        {
            get
            {
                if ((this.mWrongArticleNum_Arrange_ActParams == null))
                {
                    this.mWrongArticleNum_Arrange_ActParams = new WrongArticleNum_Arrange_ActParams();
                }
                return this.mWrongArticleNum_Arrange_ActParams;
            }
        }
        
        public virtual WrongArticleNum_AssertExpectedValues WrongArticleNum_AssertExpectedValues
        {
            get
            {
                if ((this.mWrongArticleNum_AssertExpectedValues == null))
                {
                    this.mWrongArticleNum_AssertExpectedValues = new WrongArticleNum_AssertExpectedValues();
                }
                return this.mWrongArticleNum_AssertExpectedValues;
            }
        }
        
        public virtual NoDate_Arrange_ActParams NoDate_Arrange_ActParams
        {
            get
            {
                if ((this.mNoDate_Arrange_ActParams == null))
                {
                    this.mNoDate_Arrange_ActParams = new NoDate_Arrange_ActParams();
                }
                return this.mNoDate_Arrange_ActParams;
            }
        }
        
        public virtual NoDate_AssertExpectedValues NoDate_AssertExpectedValues
        {
            get
            {
                if ((this.mNoDate_AssertExpectedValues == null))
                {
                    this.mNoDate_AssertExpectedValues = new NoDate_AssertExpectedValues();
                }
                return this.mNoDate_AssertExpectedValues;
            }
        }
        
        public virtual ValidInput_Arrange_ActParams ValidInput_Arrange_ActParams
        {
            get
            {
                if ((this.mValidInput_Arrange_ActParams == null))
                {
                    this.mValidInput_Arrange_ActParams = new ValidInput_Arrange_ActParams();
                }
                return this.mValidInput_Arrange_ActParams;
            }
        }
        
        public virtual ValidInput_AssertExpectedValues ValidInput_AssertExpectedValues
        {
            get
            {
                if ((this.mValidInput_AssertExpectedValues == null))
                {
                    this.mValidInput_AssertExpectedValues = new ValidInput_AssertExpectedValues();
                }
                return this.mValidInput_AssertExpectedValues;
            }
        }
        
        public virtual ValidInput_Arrange_Act2Params ValidInput_Arrange_Act2Params
        {
            get
            {
                if ((this.mValidInput_Arrange_Act2Params == null))
                {
                    this.mValidInput_Arrange_Act2Params = new ValidInput_Arrange_Act2Params();
                }
                return this.mValidInput_Arrange_Act2Params;
            }
        }
        
        public virtual ValidInput_Arrange_Act_1Params ValidInput_Arrange_Act_1Params
        {
            get
            {
                if ((this.mValidInput_Arrange_Act_1Params == null))
                {
                    this.mValidInput_Arrange_Act_1Params = new ValidInput_Arrange_Act_1Params();
                }
                return this.mValidInput_Arrange_Act_1Params;
            }
        }
        
        public virtual ValidInput_Assert_1ExpectedValues ValidInput_Assert_1ExpectedValues
        {
            get
            {
                if ((this.mValidInput_Assert_1ExpectedValues == null))
                {
                    this.mValidInput_Assert_1ExpectedValues = new ValidInput_Assert_1ExpectedValues();
                }
                return this.mValidInput_Assert_1ExpectedValues;
            }
        }
        
        public virtual ShouldBeValid_Arrange_ActParams ShouldBeValid_Arrange_ActParams
        {
            get
            {
                if ((this.mShouldBeValid_Arrange_ActParams == null))
                {
                    this.mShouldBeValid_Arrange_ActParams = new ShouldBeValid_Arrange_ActParams();
                }
                return this.mShouldBeValid_Arrange_ActParams;
            }
        }
        
        public virtual ShouldBeValid_AssertExpectedValues ShouldBeValid_AssertExpectedValues
        {
            get
            {
                if ((this.mShouldBeValid_AssertExpectedValues == null))
                {
                    this.mShouldBeValid_AssertExpectedValues = new ShouldBeValid_AssertExpectedValues();
                }
                return this.mShouldBeValid_AssertExpectedValues;
            }
        }
        
        public UIDebugWindow UIDebugWindow
        {
            get
            {
                if ((this.mUIDebugWindow == null))
                {
                    this.mUIDebugWindow = new UIDebugWindow();
                }
                return this.mUIDebugWindow;
            }
        }
        
        public UIMainWindowWindow UIMainWindowWindow
        {
            get
            {
                if ((this.mUIMainWindowWindow == null))
                {
                    this.mUIMainWindowWindow = new UIMainWindowWindow();
                }
                return this.mUIMainWindowWindow;
            }
        }
        
        public UIMainWindowWindow1 UIMainWindowWindow1
        {
            get
            {
                if ((this.mUIMainWindowWindow1 == null))
                {
                    this.mUIMainWindowWindow1 = new UIMainWindowWindow1();
                }
                return this.mUIMainWindowWindow1;
            }
        }
        #endregion
        
        #region Fields
        private WrongArticleNum_Arrange_ActParams mWrongArticleNum_Arrange_ActParams;
        
        private WrongArticleNum_AssertExpectedValues mWrongArticleNum_AssertExpectedValues;
        
        private NoDate_Arrange_ActParams mNoDate_Arrange_ActParams;
        
        private NoDate_AssertExpectedValues mNoDate_AssertExpectedValues;
        
        private ValidInput_Arrange_ActParams mValidInput_Arrange_ActParams;
        
        private ValidInput_AssertExpectedValues mValidInput_AssertExpectedValues;
        
        private ValidInput_Arrange_Act2Params mValidInput_Arrange_Act2Params;
        
        private ValidInput_Arrange_Act_1Params mValidInput_Arrange_Act_1Params;
        
        private ValidInput_Assert_1ExpectedValues mValidInput_Assert_1ExpectedValues;
        
        private ShouldBeValid_Arrange_ActParams mShouldBeValid_Arrange_ActParams;
        
        private ShouldBeValid_AssertExpectedValues mShouldBeValid_AssertExpectedValues;
        
        private UIDebugWindow mUIDebugWindow;
        
        private UIMainWindowWindow mUIMainWindowWindow;
        
        private UIMainWindowWindow1 mUIMainWindowWindow1;
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'WrongArticleNum_Arrange_Act'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "16.0.28315.86")]
    public class WrongArticleNum_Arrange_ActParams
    {
        
        #region Fields
        /// <summary>
        /// Type '123' in 'ArticleNumber' text box
        /// </summary>
        public string UIArticleNumberEditText = "123";
        
        /// <summary>
        /// Select 'ACER' in 'Manufacturer' combo box
        /// </summary>
        public string UIManufacturerComboBoxSelectedItem = "ACER";
        
        /// <summary>
        /// Type 'Aspire' in 'ArticleName' text box
        /// </summary>
        public string UIArticleNameEditText = "Aspire";
        
        /// <summary>
        /// Type '3.6 GHZ CPU' in 'ArticleDescription' text box
        /// </summary>
        public string UIArticleDescriptionEditText = "3.6 GHZ CPU";
        
        /// <summary>
        /// Type 'Shift + {Home}' in 'ArticleDescription' text box
        /// </summary>
        public string UIArticleDescriptionEditSendKeys = "{Home}";
        
        /// <summary>
        /// Type '999' in 'Price' text box
        /// </summary>
        public string UIPriceEditText = "999";
        
        /// <summary>
        /// Select 'OnStock' check box
        /// </summary>
        public bool UIOnStockCheckBoxChecked = true;
        
        /// <summary>
        /// Select '09-Oct-2019' in 'LastArrival' date picker
        /// </summary>
        public string UILastArrivalDatePickerDateAsString = "09-Oct-2019";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'WrongArticleNum_Assert'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "16.0.28315.86")]
    public class WrongArticleNum_AssertExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'DisplayText' property of 'Bitte geben Sie eine gültige, 7 Stellige Artikelnu...' label equals 'Bitte geben Sie eine gültige, 7 Stellige Artikelnummer ein.'
        /// </summary>
        public string UIBittegebenSieeinegülTextDisplayText = "Bitte geben Sie eine gültige, 7 Stellige Artikelnummer ein.";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'NoDate_Arrange_Act'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "16.0.28315.86")]
    public class NoDate_Arrange_ActParams
    {
        
        #region Fields
        /// <summary>
        /// Type '1234567' in 'ArticleNumber' text box
        /// </summary>
        public string UIArticleNumberEditText = "1234567";
        
        /// <summary>
        /// Select 'ACER' in 'Manufacturer' combo box
        /// </summary>
        public string UIManufacturerComboBoxSelectedItem = "ACER";
        
        /// <summary>
        /// Type 'Aspire' in 'ArticleName' text box
        /// </summary>
        public string UIArticleNameEditText = "Aspire";
        
        /// <summary>
        /// Type '{Tab}' in 'ArticleName' text box
        /// </summary>
        public string UIArticleNameEditSendKeys = "{Tab}";
        
        /// <summary>
        /// Type '3.6 GHZ CPU' in 'ArticleDescription' text box
        /// </summary>
        public string UIArticleDescriptionEditText = "3.6 GHZ CPU";
        
        /// <summary>
        /// Type '{Tab}' in 'ArticleDescription' text box
        /// </summary>
        public string UIArticleDescriptionEditSendKeys = "{Tab}";
        
        /// <summary>
        /// Type '999' in 'Price' text box
        /// </summary>
        public string UIPriceEditText = "999";
        
        /// <summary>
        /// Type '{Tab}' in 'Price' text box
        /// </summary>
        public string UIPriceEditSendKeys = "{Tab}";
        
        /// <summary>
        /// Select 'OnStock' check box
        /// </summary>
        public bool UIOnStockCheckBoxChecked = true;
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'NoDate_Assert'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "16.0.28315.86")]
    public class NoDate_AssertExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'DisplayText' property of 'Bitte geben Sie ein Datum an.' label equals 'Bitte geben Sie ein Datum an.'
        /// </summary>
        public string UIBittegebenSieeinDatuTextDisplayText = "Bitte geben Sie ein Datum an.";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'ValidInput_Arrange_Act'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "16.0.28315.86")]
    public class ValidInput_Arrange_ActParams
    {
        
        #region Fields
        /// <summary>
        /// Type '1234567' in 'ArticleNumber' text box
        /// </summary>
        public string UIArticleNumberEditText = "1234567";
        
        /// <summary>
        /// Select 'ACER' in 'Manufacturer' combo box
        /// </summary>
        public string UIManufacturerComboBoxSelectedItem = "ACER";
        
        /// <summary>
        /// Type 'Aspire' in 'ArticleName' text box
        /// </summary>
        public string UIArticleNameEditText = "Aspire";
        
        /// <summary>
        /// Type '999' in 'Price' text box
        /// </summary>
        public string UIPriceEditText = "999";
        
        /// <summary>
        /// Select 'OnStock' check box
        /// </summary>
        public bool UIOnStockCheckBoxChecked = true;
        
        /// <summary>
        /// Select '09-Oct-2019' in 'LastArrival' date picker
        /// </summary>
        public string UILastArrivalDatePickerDateAsString = "09-Oct-2019";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'ValidInput_Assert'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "16.0.28315.86")]
    public class ValidInput_AssertExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'DisplayText' property of '1234567' label equals '1234567'
        /// </summary>
        public string UIItem1234567TextDisplayText = "1234567";
        
        /// <summary>
        /// Verify that the 'DisplayText' property of 'ACER' label equals 'ACER'
        /// </summary>
        public string UIACERTextDisplayText = "ACER";
        
        /// <summary>
        /// Verify that the 'Name' property of 'Aspire' label equals 'Aspire'
        /// </summary>
        public string UIAspireTextName = "Aspire";
        
        /// <summary>
        /// Verify that the 'Name' property of '999.00' label equals '999.00'
        /// </summary>
        public string UIItem99900TextName = "999.00";
        
        /// <summary>
        /// Verify that the 'Checked' property of check box equals 'True'
        /// </summary>
        public bool UIItemCheckBoxChecked = true;
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'ValidInput_Arrange_Act2'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "16.0.28315.86")]
    public class ValidInput_Arrange_Act2Params
    {
        
        #region Fields
        /// <summary>
        /// Type '1234567' in 'ArticleNumber' text box
        /// </summary>
        public string UIArticleNumberEditText = "1234567";
        
        /// <summary>
        /// Select 'ACER' in 'Manufacturer' combo box
        /// </summary>
        public string UIManufacturerComboBoxSelectedItem = "ACER";
        
        /// <summary>
        /// Type 'Aspire' in 'ArticleName' text box
        /// </summary>
        public string UIArticleNameEditText = "Aspire";
        
        /// <summary>
        /// Type '999' in 'Price' text box
        /// </summary>
        public string UIPriceEditText = "999";
        
        /// <summary>
        /// Select 'OnStock' check box
        /// </summary>
        public bool UIOnStockCheckBoxChecked = true;
        
        /// <summary>
        /// Select '09-Oct-2019' in 'LastArrival' date picker
        /// </summary>
        public string UILastArrivalDatePickerDateAsString = "09-Oct-2019";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'ValidInput_Arrange_Act_1'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "16.0.28315.86")]
    public class ValidInput_Arrange_Act_1Params
    {
        
        #region Fields
        /// <summary>
        /// Type '1234567' in 'ArticleNumber' text box
        /// </summary>
        public string UIArticleNumberEditText = "1234567";
        
        /// <summary>
        /// Select 'ACER' in 'Manufacturer' combo box
        /// </summary>
        public string UIManufacturerComboBoxSelectedItem = "ACER";
        
        /// <summary>
        /// Type 'Aspire' in 'ArticleName' text box
        /// </summary>
        public string UIArticleNameEditText = "Aspire";
        
        /// <summary>
        /// Type '{Tab}' in 'ArticleName' text box
        /// </summary>
        public string UIArticleNameEditSendKeys = "{Tab}";
        
        /// <summary>
        /// Type '{Tab}' in 'ArticleDescription' text box
        /// </summary>
        public string UIArticleDescriptionEditSendKeys = "{Tab}";
        
        /// <summary>
        /// Type '999' in 'Price' text box
        /// </summary>
        public string UIPriceEditText = "999";
        
        /// <summary>
        /// Select 'OnStock' check box
        /// </summary>
        public bool UIOnStockCheckBoxChecked = true;
        
        /// <summary>
        /// Select '09-Oct-2019' in 'LastArrival' date picker
        /// </summary>
        public string UILastArrivalDatePickerDateAsString = "09-Oct-2019";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'ValidInput_Assert_1'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "16.0.28315.86")]
    public class ValidInput_Assert_1ExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'DisplayText' property of '1234567' label equals '1234567'
        /// </summary>
        public string UIItem1234567TextDisplayText = "1234567";
        
        /// <summary>
        /// Verify that the 'DisplayText' property of 'ACER' label equals 'ACER'
        /// </summary>
        public string UIACERTextDisplayText = "ACER";
        
        /// <summary>
        /// Verify that the 'DisplayText' property of 'Aspire' label equals 'Aspire'
        /// </summary>
        public string UIAspireTextDisplayText = "Aspire";
        
        /// <summary>
        /// Verify that the 'DisplayText' property of '999.00' label equals '999.00'
        /// </summary>
        public string UIItem99900TextDisplayText = "999.00";
        
        /// <summary>
        /// Verify that the 'Checked' property of 'IsOnStock' check box equals 'True'
        /// </summary>
        public bool UIIsOnStockCheckBoxChecked = true;
        
        /// <summary>
        /// Verify that the 'DisplayText' property of '09.10.2019' label equals '09.10.2019'
        /// </summary>
        public string UIItem09102019TextDisplayText = "09.10.2019";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'ShouldBeValid_Arrange_Act'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "16.0.28315.86")]
    public class ShouldBeValid_Arrange_ActParams
    {
        
        #region Fields
        /// <summary>
        /// Type '1234567' in 'ArticleNumber' text box
        /// </summary>
        public string UIArticleNumberEditText = "1234567";
        
        /// <summary>
        /// Type '{Tab}' in 'ArticleNumber' text box
        /// </summary>
        public string UIArticleNumberEditSendKeys = "{Tab}";
        
        /// <summary>
        /// Select 'ACER' in 'Manufacturer' combo box
        /// </summary>
        public string UIManufacturerComboBoxSelectedItem = "ACER";
        
        /// <summary>
        /// Type 'Aspire' in 'ArticleName' text box
        /// </summary>
        public string UIArticleNameEditText = "Aspire";
        
        /// <summary>
        /// Type '999' in 'Price' text box
        /// </summary>
        public string UIPriceEditText = "999";
        
        /// <summary>
        /// Select 'OnStock' check box
        /// </summary>
        public bool UIOnStockCheckBoxChecked = true;
        
        /// <summary>
        /// Select '09-Oct-2019' in 'LastArrival' date picker
        /// </summary>
        public string UILastArrivalDatePickerDateAsString = "09-Oct-2019";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'ShouldBeValid_Assert'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "16.0.28315.86")]
    public class ShouldBeValid_AssertExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'RowCount' property of 'SelectionList' table is not equal to '0'
        /// </summary>
        public int UISelectionListTableRowCount = 0;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "16.0.28315.86")]
    public class UIDebugWindow : WinWindow
    {
        
        public UIDebugWindow()
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.Name] = "Debug";
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "CabinetWClass";
            this.WindowTitles.Add("Debug");
            #endregion
        }
        
        #region Properties
        public UIItemWindow UIItemWindow
        {
            get
            {
                if ((this.mUIItemWindow == null))
                {
                    this.mUIItemWindow = new UIItemWindow(this);
                }
                return this.mUIItemWindow;
            }
        }
        #endregion
        
        #region Fields
        private UIItemWindow mUIItemWindow;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "16.0.28315.86")]
    public class UIItemWindow : WinWindow
    {
        
        public UIItemWindow(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.AccessibleName] = "Elementansicht";
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "DirectUIHWND";
            this.WindowTitles.Add("Debug");
            #endregion
        }
        
        #region Properties
        public UIM120ProjektexeListItem UIM120ProjektexeListItem
        {
            get
            {
                if ((this.mUIM120ProjektexeListItem == null))
                {
                    this.mUIM120ProjektexeListItem = new UIM120ProjektexeListItem(this);
                }
                return this.mUIM120ProjektexeListItem;
            }
        }
        #endregion
        
        #region Fields
        private UIM120ProjektexeListItem mUIM120ProjektexeListItem;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "16.0.28315.86")]
    public class UIM120ProjektexeListItem : WinListItem
    {
        
        public UIM120ProjektexeListItem(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinListItem.PropertyNames.Name] = "M120Projekt.exe";
            this.WindowTitles.Add("Debug");
            #endregion
        }
        
        #region Properties
        public WinEdit UINameEdit
        {
            get
            {
                if ((this.mUINameEdit == null))
                {
                    this.mUINameEdit = new WinEdit(this);
                    #region Search Criteria
                    this.mUINameEdit.SearchProperties[WinEdit.PropertyNames.Name] = "Name";
                    this.mUINameEdit.WindowTitles.Add("Debug");
                    #endregion
                }
                return this.mUINameEdit;
            }
        }
        #endregion
        
        #region Fields
        private WinEdit mUINameEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "16.0.28315.86")]
    public class UIMainWindowWindow : WpfWindow
    {
        
        public UIMainWindowWindow()
        {
            #region Search Criteria
            this.SearchProperties[WpfWindow.PropertyNames.Name] = "MainWindow";
            this.SearchProperties.Add(new PropertyExpression(WpfWindow.PropertyNames.ClassName, "HwndWrapper", PropertyExpressionOperator.Contains));
            this.WindowTitles.Add("MainWindow");
            #endregion
        }
        
        #region Properties
        public UIItemCustom UIItemCustom
        {
            get
            {
                if ((this.mUIItemCustom == null))
                {
                    this.mUIItemCustom = new UIItemCustom(this);
                }
                return this.mUIItemCustom;
            }
        }
        
        public UIItemCustom1 UIItemCustom1
        {
            get
            {
                if ((this.mUIItemCustom1 == null))
                {
                    this.mUIItemCustom1 = new UIItemCustom1(this);
                }
                return this.mUIItemCustom1;
            }
        }
        
        public UIItemCustom2 UIItemCustom2
        {
            get
            {
                if ((this.mUIItemCustom2 == null))
                {
                    this.mUIItemCustom2 = new UIItemCustom2(this);
                }
                return this.mUIItemCustom2;
            }
        }
        
        public UIItemCustom3 UIItemCustom3
        {
            get
            {
                if ((this.mUIItemCustom3 == null))
                {
                    this.mUIItemCustom3 = new UIItemCustom3(this);
                }
                return this.mUIItemCustom3;
            }
        }
        #endregion
        
        #region Fields
        private UIItemCustom mUIItemCustom;
        
        private UIItemCustom1 mUIItemCustom1;
        
        private UIItemCustom2 mUIItemCustom2;
        
        private UIItemCustom3 mUIItemCustom3;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "16.0.28315.86")]
    public class UIItemCustom : WpfCustom
    {
        
        public UIItemCustom(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.OverviewArticles";
            this.WindowTitles.Add("MainWindow");
            #endregion
        }
        
        #region Properties
        public WpfButton UIButtonCreateArticleButton
        {
            get
            {
                if ((this.mUIButtonCreateArticleButton == null))
                {
                    this.mUIButtonCreateArticleButton = new WpfButton(this);
                    #region Search Criteria
                    this.mUIButtonCreateArticleButton.SearchProperties[WpfButton.PropertyNames.AutomationId] = "ButtonCreateArticle";
                    this.mUIButtonCreateArticleButton.WindowTitles.Add("MainWindow");
                    #endregion
                }
                return this.mUIButtonCreateArticleButton;
            }
        }
        
        public UISelectionListTable UISelectionListTable
        {
            get
            {
                if ((this.mUISelectionListTable == null))
                {
                    this.mUISelectionListTable = new UISelectionListTable(this);
                }
                return this.mUISelectionListTable;
            }
        }
        #endregion
        
        #region Fields
        private WpfButton mUIButtonCreateArticleButton;
        
        private UISelectionListTable mUISelectionListTable;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "16.0.28315.86")]
    public class UISelectionListTable : WpfTable
    {
        
        public UISelectionListTable(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfTable.PropertyNames.AutomationId] = "SelectionList";
            this.WindowTitles.Add("MainWindow");
            #endregion
        }
        
        #region Properties
        public UIItem1234567Row UIItem1234567Row
        {
            get
            {
                if ((this.mUIItem1234567Row == null))
                {
                    this.mUIItem1234567Row = new UIItem1234567Row(this);
                }
                return this.mUIItem1234567Row;
            }
        }
        #endregion
        
        #region Fields
        private UIItem1234567Row mUIItem1234567Row;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "16.0.28315.86")]
    public class UIItem1234567Row : WpfRow
    {
        
        public UIItem1234567Row(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfRow.PropertyNames.Name] = "1234567";
            this.SearchConfigurations.Add(SearchConfiguration.AlwaysSearch);
            this.WindowTitles.Add("MainWindow");
            #endregion
        }
        
        #region Properties
        public UIItem1234567Cell UIItem1234567Cell
        {
            get
            {
                if ((this.mUIItem1234567Cell == null))
                {
                    this.mUIItem1234567Cell = new UIItem1234567Cell(this);
                }
                return this.mUIItem1234567Cell;
            }
        }
        
        public UIACERCell UIACERCell
        {
            get
            {
                if ((this.mUIACERCell == null))
                {
                    this.mUIACERCell = new UIACERCell(this);
                }
                return this.mUIACERCell;
            }
        }
        
        public UIAspireCell UIAspireCell
        {
            get
            {
                if ((this.mUIAspireCell == null))
                {
                    this.mUIAspireCell = new UIAspireCell(this);
                }
                return this.mUIAspireCell;
            }
        }
        
        public UIItem99900Cell UIItem99900Cell
        {
            get
            {
                if ((this.mUIItem99900Cell == null))
                {
                    this.mUIItem99900Cell = new UIItem99900Cell(this);
                }
                return this.mUIItem99900Cell;
            }
        }
        
        public UITrueCell UITrueCell
        {
            get
            {
                if ((this.mUITrueCell == null))
                {
                    this.mUITrueCell = new UITrueCell(this);
                }
                return this.mUITrueCell;
            }
        }
        #endregion
        
        #region Fields
        private UIItem1234567Cell mUIItem1234567Cell;
        
        private UIACERCell mUIACERCell;
        
        private UIAspireCell mUIAspireCell;
        
        private UIItem99900Cell mUIItem99900Cell;
        
        private UITrueCell mUITrueCell;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "16.0.28315.86")]
    public class UIItem1234567Cell : WpfCell
    {
        
        public UIItem1234567Cell(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfCell.PropertyNames.ColumnHeader] = "Artikelnummer";
            this.WindowTitles.Add("MainWindow");
            #endregion
        }
        
        #region Properties
        public WpfText UIItem1234567Text
        {
            get
            {
                if ((this.mUIItem1234567Text == null))
                {
                    this.mUIItem1234567Text = new WpfText(this);
                    #region Search Criteria
                    this.mUIItem1234567Text.SearchProperties[WpfText.PropertyNames.Name] = "1234567";
                    this.mUIItem1234567Text.WindowTitles.Add("MainWindow");
                    #endregion
                }
                return this.mUIItem1234567Text;
            }
        }
        #endregion
        
        #region Fields
        private WpfText mUIItem1234567Text;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "16.0.28315.86")]
    public class UIACERCell : WpfCell
    {
        
        public UIACERCell(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfCell.PropertyNames.ColumnHeader] = "Hersteller";
            this.WindowTitles.Add("MainWindow");
            #endregion
        }
        
        #region Properties
        public WpfText UIACERText
        {
            get
            {
                if ((this.mUIACERText == null))
                {
                    this.mUIACERText = new WpfText(this);
                    #region Search Criteria
                    this.mUIACERText.SearchProperties[WpfText.PropertyNames.Name] = "ACER";
                    this.mUIACERText.WindowTitles.Add("MainWindow");
                    #endregion
                }
                return this.mUIACERText;
            }
        }
        #endregion
        
        #region Fields
        private WpfText mUIACERText;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "16.0.28315.86")]
    public class UIAspireCell : WpfCell
    {
        
        public UIAspireCell(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfCell.PropertyNames.ColumnHeader] = "Name";
            this.WindowTitles.Add("MainWindow");
            #endregion
        }
        
        #region Properties
        public WpfText UIAspireText
        {
            get
            {
                if ((this.mUIAspireText == null))
                {
                    this.mUIAspireText = new WpfText(this);
                    #region Search Criteria
                    this.mUIAspireText.SearchProperties[WpfText.PropertyNames.Name] = "Aspire";
                    this.mUIAspireText.WindowTitles.Add("MainWindow");
                    #endregion
                }
                return this.mUIAspireText;
            }
        }
        #endregion
        
        #region Fields
        private WpfText mUIAspireText;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "16.0.28315.86")]
    public class UIItem99900Cell : WpfCell
    {
        
        public UIItem99900Cell(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfCell.PropertyNames.ColumnHeader] = "Preis in CHF";
            this.WindowTitles.Add("MainWindow");
            #endregion
        }
        
        #region Properties
        public WpfText UIItem99900Text
        {
            get
            {
                if ((this.mUIItem99900Text == null))
                {
                    this.mUIItem99900Text = new WpfText(this);
                    #region Search Criteria
                    this.mUIItem99900Text.SearchProperties[WpfText.PropertyNames.Name] = "999.00";
                    this.mUIItem99900Text.WindowTitles.Add("MainWindow");
                    #endregion
                }
                return this.mUIItem99900Text;
            }
        }
        #endregion
        
        #region Fields
        private WpfText mUIItem99900Text;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "16.0.28315.86")]
    public class UITrueCell : WpfCell
    {
        
        public UITrueCell(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfCell.PropertyNames.ColumnHeader] = "An Lager";
            this.WindowTitles.Add("MainWindow");
            #endregion
        }
        
        #region Properties
        public WpfCheckBox UIItemCheckBox
        {
            get
            {
                if ((this.mUIItemCheckBox == null))
                {
                    this.mUIItemCheckBox = new WpfCheckBox(this);
                    #region Search Criteria
                    this.mUIItemCheckBox.WindowTitles.Add("MainWindow");
                    #endregion
                }
                return this.mUIItemCheckBox;
            }
        }
        #endregion
        
        #region Fields
        private WpfCheckBox mUIItemCheckBox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "16.0.28315.86")]
    public class UIItemCustom1 : WpfCustom
    {
        
        public UIItemCustom1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.EditArticle";
            this.WindowTitles.Add("MainWindow");
            #endregion
        }
        
        #region Properties
        public UIArticleNumberEdit UIArticleNumberEdit
        {
            get
            {
                if ((this.mUIArticleNumberEdit == null))
                {
                    this.mUIArticleNumberEdit = new UIArticleNumberEdit(this);
                }
                return this.mUIArticleNumberEdit;
            }
        }
        
        public WpfComboBox UIManufacturerComboBox
        {
            get
            {
                if ((this.mUIManufacturerComboBox == null))
                {
                    this.mUIManufacturerComboBox = new WpfComboBox(this);
                    #region Search Criteria
                    this.mUIManufacturerComboBox.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "Manufacturer";
                    this.mUIManufacturerComboBox.WindowTitles.Add("MainWindow");
                    #endregion
                }
                return this.mUIManufacturerComboBox;
            }
        }
        
        public WpfEdit UIArticleNameEdit
        {
            get
            {
                if ((this.mUIArticleNameEdit == null))
                {
                    this.mUIArticleNameEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mUIArticleNameEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "ArticleName";
                    this.mUIArticleNameEdit.WindowTitles.Add("MainWindow");
                    #endregion
                }
                return this.mUIArticleNameEdit;
            }
        }
        
        public WpfEdit UIArticleDescriptionEdit
        {
            get
            {
                if ((this.mUIArticleDescriptionEdit == null))
                {
                    this.mUIArticleDescriptionEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mUIArticleDescriptionEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "ArticleDescription";
                    this.mUIArticleDescriptionEdit.WindowTitles.Add("MainWindow");
                    #endregion
                }
                return this.mUIArticleDescriptionEdit;
            }
        }
        
        public UIPriceEdit UIPriceEdit
        {
            get
            {
                if ((this.mUIPriceEdit == null))
                {
                    this.mUIPriceEdit = new UIPriceEdit(this);
                }
                return this.mUIPriceEdit;
            }
        }
        
        public WpfCheckBox UIOnStockCheckBox
        {
            get
            {
                if ((this.mUIOnStockCheckBox == null))
                {
                    this.mUIOnStockCheckBox = new WpfCheckBox(this);
                    #region Search Criteria
                    this.mUIOnStockCheckBox.SearchProperties[WpfCheckBox.PropertyNames.AutomationId] = "OnStock";
                    this.mUIOnStockCheckBox.WindowTitles.Add("MainWindow");
                    #endregion
                }
                return this.mUIOnStockCheckBox;
            }
        }
        
        public WpfDatePicker UILastArrivalDatePicker
        {
            get
            {
                if ((this.mUILastArrivalDatePicker == null))
                {
                    this.mUILastArrivalDatePicker = new WpfDatePicker(this);
                    #region Search Criteria
                    this.mUILastArrivalDatePicker.SearchProperties[WpfDatePicker.PropertyNames.AutomationId] = "LastArrival";
                    this.mUILastArrivalDatePicker.WindowTitles.Add("MainWindow");
                    #endregion
                }
                return this.mUILastArrivalDatePicker;
            }
        }
        
        public WpfButton UIBtnSaveButton
        {
            get
            {
                if ((this.mUIBtnSaveButton == null))
                {
                    this.mUIBtnSaveButton = new WpfButton(this);
                    #region Search Criteria
                    this.mUIBtnSaveButton.SearchProperties[WpfButton.PropertyNames.AutomationId] = "BtnSave";
                    this.mUIBtnSaveButton.WindowTitles.Add("MainWindow");
                    #endregion
                }
                return this.mUIBtnSaveButton;
            }
        }
        
        public WpfText UIBittegebenSieeinegülText
        {
            get
            {
                if ((this.mUIBittegebenSieeinegülText == null))
                {
                    this.mUIBittegebenSieeinegülText = new WpfText(this);
                    #region Search Criteria
                    this.mUIBittegebenSieeinegülText.SearchProperties[WpfText.PropertyNames.AutomationId] = "ValidationTextArticleNumber";
                    this.mUIBittegebenSieeinegülText.WindowTitles.Add("MainWindow");
                    #endregion
                }
                return this.mUIBittegebenSieeinegülText;
            }
        }
        
        public WpfText UIBittegebenSieeinDatuText
        {
            get
            {
                if ((this.mUIBittegebenSieeinDatuText == null))
                {
                    this.mUIBittegebenSieeinDatuText = new WpfText(this);
                    #region Search Criteria
                    this.mUIBittegebenSieeinDatuText.SearchProperties[WpfText.PropertyNames.AutomationId] = "ValidationTextLastArrival";
                    this.mUIBittegebenSieeinDatuText.WindowTitles.Add("MainWindow");
                    #endregion
                }
                return this.mUIBittegebenSieeinDatuText;
            }
        }
        #endregion
        
        #region Fields
        private UIArticleNumberEdit mUIArticleNumberEdit;
        
        private WpfComboBox mUIManufacturerComboBox;
        
        private WpfEdit mUIArticleNameEdit;
        
        private WpfEdit mUIArticleDescriptionEdit;
        
        private UIPriceEdit mUIPriceEdit;
        
        private WpfCheckBox mUIOnStockCheckBox;
        
        private WpfDatePicker mUILastArrivalDatePicker;
        
        private WpfButton mUIBtnSaveButton;
        
        private WpfText mUIBittegebenSieeinegülText;
        
        private WpfText mUIBittegebenSieeinDatuText;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "16.0.28315.86")]
    public class UIArticleNumberEdit : WpfEdit
    {
        
        public UIArticleNumberEdit(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "ArticleNumber";
            this.WindowTitles.Add("MainWindow");
            #endregion
        }
        
        #region Properties
        public WpfText UIArtikelnummerText
        {
            get
            {
                if ((this.mUIArtikelnummerText == null))
                {
                    this.mUIArtikelnummerText = new WpfText(this);
                    #region Search Criteria
                    this.mUIArtikelnummerText.SearchProperties[WpfText.PropertyNames.Name] = "Artikelnummer";
                    this.mUIArtikelnummerText.WindowTitles.Add("MainWindow");
                    #endregion
                }
                return this.mUIArtikelnummerText;
            }
        }
        #endregion
        
        #region Fields
        private WpfText mUIArtikelnummerText;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "16.0.28315.86")]
    public class UIPriceEdit : WpfEdit
    {
        
        public UIPriceEdit(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Price";
            this.WindowTitles.Add("MainWindow");
            #endregion
        }
        
        #region Properties
        public WpfText UIPreisText
        {
            get
            {
                if ((this.mUIPreisText == null))
                {
                    this.mUIPreisText = new WpfText(this);
                    #region Search Criteria
                    this.mUIPreisText.SearchProperties[WpfText.PropertyNames.Name] = "Preis";
                    this.mUIPreisText.WindowTitles.Add("MainWindow");
                    #endregion
                }
                return this.mUIPreisText;
            }
        }
        #endregion
        
        #region Fields
        private WpfText mUIPreisText;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "16.0.28315.86")]
    public class UIItemCustom2 : WpfCustom
    {
        
        public UIItemCustom2(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.OverviewArticles";
            this.WindowTitles.Add("MainWindow");
            #endregion
        }
        
        #region Properties
        public UISelectionListTable1 UISelectionListTable
        {
            get
            {
                if ((this.mUISelectionListTable == null))
                {
                    this.mUISelectionListTable = new UISelectionListTable1(this);
                }
                return this.mUISelectionListTable;
            }
        }
        #endregion
        
        #region Fields
        private UISelectionListTable1 mUISelectionListTable;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "16.0.28315.86")]
    public class UISelectionListTable1 : WpfTable
    {
        
        public UISelectionListTable1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfTable.PropertyNames.AutomationId] = "SelectionList";
            this.WindowTitles.Add("MainWindow");
            #endregion
        }
        
        #region Properties
        public UIItem1234567Row1 UIItem1234567Row
        {
            get
            {
                if ((this.mUIItem1234567Row == null))
                {
                    this.mUIItem1234567Row = new UIItem1234567Row1(this);
                }
                return this.mUIItem1234567Row;
            }
        }
        #endregion
        
        #region Fields
        private UIItem1234567Row1 mUIItem1234567Row;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "16.0.28315.86")]
    public class UIItem1234567Row1 : WpfRow
    {
        
        public UIItem1234567Row1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfRow.PropertyNames.Name] = "1234567";
            this.SearchConfigurations.Add(SearchConfiguration.AlwaysSearch);
            this.WindowTitles.Add("MainWindow");
            #endregion
        }
        
        #region Properties
        public WpfCell UIAspireCell
        {
            get
            {
                if ((this.mUIAspireCell == null))
                {
                    this.mUIAspireCell = new WpfCell(this);
                    #region Search Criteria
                    this.mUIAspireCell.SearchProperties[WpfCell.PropertyNames.ColumnHeader] = "Name";
                    this.mUIAspireCell.WindowTitles.Add("MainWindow");
                    #endregion
                }
                return this.mUIAspireCell;
            }
        }
        #endregion
        
        #region Fields
        private WpfCell mUIAspireCell;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "16.0.28315.86")]
    public class UIItemCustom3 : WpfCustom
    {
        
        public UIItemCustom3(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.IndicateArticle";
            this.WindowTitles.Add("MainWindow");
            #endregion
        }
        
        #region Properties
        public WpfText UIItem1234567Text
        {
            get
            {
                if ((this.mUIItem1234567Text == null))
                {
                    this.mUIItem1234567Text = new WpfText(this);
                    #region Search Criteria
                    this.mUIItem1234567Text.SearchProperties[WpfText.PropertyNames.AutomationId] = "ArticleNumber";
                    this.mUIItem1234567Text.WindowTitles.Add("MainWindow");
                    #endregion
                }
                return this.mUIItem1234567Text;
            }
        }
        
        public WpfText UIACERText
        {
            get
            {
                if ((this.mUIACERText == null))
                {
                    this.mUIACERText = new WpfText(this);
                    #region Search Criteria
                    this.mUIACERText.SearchProperties[WpfText.PropertyNames.AutomationId] = "Manufacturer";
                    this.mUIACERText.WindowTitles.Add("MainWindow");
                    #endregion
                }
                return this.mUIACERText;
            }
        }
        
        public WpfText UIAspireText
        {
            get
            {
                if ((this.mUIAspireText == null))
                {
                    this.mUIAspireText = new WpfText(this);
                    #region Search Criteria
                    this.mUIAspireText.SearchProperties[WpfText.PropertyNames.AutomationId] = "Name";
                    this.mUIAspireText.WindowTitles.Add("MainWindow");
                    #endregion
                }
                return this.mUIAspireText;
            }
        }
        
        public WpfText UIItem99900Text
        {
            get
            {
                if ((this.mUIItem99900Text == null))
                {
                    this.mUIItem99900Text = new WpfText(this);
                    #region Search Criteria
                    this.mUIItem99900Text.SearchProperties[WpfText.PropertyNames.AutomationId] = "Price";
                    this.mUIItem99900Text.WindowTitles.Add("MainWindow");
                    #endregion
                }
                return this.mUIItem99900Text;
            }
        }
        
        public WpfCheckBox UIIsOnStockCheckBox
        {
            get
            {
                if ((this.mUIIsOnStockCheckBox == null))
                {
                    this.mUIIsOnStockCheckBox = new WpfCheckBox(this);
                    #region Search Criteria
                    this.mUIIsOnStockCheckBox.SearchProperties[WpfCheckBox.PropertyNames.AutomationId] = "IsOnStock";
                    this.mUIIsOnStockCheckBox.WindowTitles.Add("MainWindow");
                    #endregion
                }
                return this.mUIIsOnStockCheckBox;
            }
        }
        
        public WpfText UIItem09102019Text
        {
            get
            {
                if ((this.mUIItem09102019Text == null))
                {
                    this.mUIItem09102019Text = new WpfText(this);
                    #region Search Criteria
                    this.mUIItem09102019Text.SearchProperties[WpfText.PropertyNames.AutomationId] = "LastArrival";
                    this.mUIItem09102019Text.WindowTitles.Add("MainWindow");
                    #endregion
                }
                return this.mUIItem09102019Text;
            }
        }
        #endregion
        
        #region Fields
        private WpfText mUIItem1234567Text;
        
        private WpfText mUIACERText;
        
        private WpfText mUIAspireText;
        
        private WpfText mUIItem99900Text;
        
        private WpfCheckBox mUIIsOnStockCheckBox;
        
        private WpfText mUIItem09102019Text;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "16.0.28315.86")]
    public class UIMainWindowWindow1 : WinWindow
    {
        
        public UIMainWindowWindow1()
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.Name] = "MainWindow";
            this.SearchProperties.Add(new PropertyExpression(WinWindow.PropertyNames.ClassName, "HwndWrapper", PropertyExpressionOperator.Contains));
            this.WindowTitles.Add("MainWindow");
            #endregion
        }
        
        #region Properties
        public WinButton UISchließenButton
        {
            get
            {
                if ((this.mUISchließenButton == null))
                {
                    this.mUISchließenButton = new WinButton(this);
                    #region Search Criteria
                    this.mUISchließenButton.SearchProperties[WinButton.PropertyNames.Name] = "Schließen";
                    this.mUISchließenButton.WindowTitles.Add("MainWindow");
                    #endregion
                }
                return this.mUISchließenButton;
            }
        }
        #endregion
        
        #region Fields
        private WinButton mUISchließenButton;
        #endregion
    }
}
